@model GreenDelight.Application.DTOs.UserDtos.UserDto
@{
    ViewData["Title"] = "UserProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="contact_grid_right">
        <style>
            body {
                background-color: white; /* Light gray background */
            }

            h1 {
                color: #2c3e50; /* Dark blue heading */
            }

            label {
                color: #2c3e50; /* Dark blue labels */
            }

            .form-control {
                border: 1px solid #bdc3c7; /* Light gray border */
            }

            .btn-primary {
                background-color: #27ae60; /* Green primary button */
                border: none;
                transition: background-color 0.3s ease; /* Smooth transition */
                padding: 12px 24px; /* Büyük buton boyutu */
                font-size: 18px; /* Buton metin boyutu */
            }

                .btn-primary:hover {
                    background-color: #219653; /* Darker green on hover */
                }

            .validation-message {
                color: red; /* Red validation messages */
            }

            .profile-picture {
                border: 5px solid #b0b435; /* Green border */
                border-radius: 50%; /* Yuvarlak kenarlar */
                overflow: hidden; /* İçeriğin taşmasını engelle */
                width: 200px; /* Profil fotoğrafı genişliği */
                height: 200px; /* Profil fotoğrafı yüksekliği */
                margin-bottom: 20px; /* Alt kısma boşluk ekle */
            }

                .profile-picture img {
                    width: 100%; /* Resmi tam genişlikte göster */
                    height: 100%; /* Resmi tam yükseklikte göster */
                    object-fit: cover; /* Resmi kırp ve ölçekle */
                }

            /* Şifre görünürlüğü */
            .password-toggle {
                position: relative;
            }

                .password-toggle input[type="password"] {
                    width: calc(100% - 30px); /* Butonun yanında yer kalacak şekilde */
                    padding-right: 30px; /* Sağ tarafta buton için alan bırak */
                }

                .password-toggle .eye-icon {
                    position: absolute;
                    top: 50%;
                    right: 10px;
                    transform: translateY(-50%);
                    cursor: pointer;
                }
        </style>

        @using (Html.BeginForm("UserProfile", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="row contact_left_grid">
                <div class="col-md-6 con-left">
                    <br>
                    @Html.Label("Profil Fotoğrafı")
                    <br />
                    <div class="profile-picture">
                        @if (!string.IsNullOrEmpty(Model.ImageUrl))
                        {
                            <img src="~/images/@Model.ImageUrl" alt="Profil Fotoğrafı" class="img-fluid" />
                        }
                    </div>

                    @Html.HiddenFor(x => x.ImageUrl) <!-- Mevcut görsel yolunu korumak için gizli alan -->
                    @Html.TextBox("ImageUrl", null, new { @class = "form-control", type = "file" }) <!-- Dosya yükleme girişi -->
                    @Html.ValidationMessageFor(x => x.ImageUrl)
                    <br>
                    @Html.Label("İsim Soyisim")
                    @Html.TextBoxFor(x => x.FullName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.FullName, "", new { @class = "validation-message" })
                    <br />
                    @Html.Label("Email")
                    @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Email, "", new { @class = "validation-message", type = "email" })
                    <br />
                    @Html.Label("Telefon Numarası")
                    <br />
                    @Html.EditorFor(x => x.PhoneNumber, new { @class = "form-control", type = "tel" })
                    @Html.ValidationMessageFor(x => x.PhoneNumber, "", new { @class = "validation-message" })
                    <br />
                    <br />
                    @Html.Label("Şifre")
                    <div class="password-toggle">
                        @Html.PasswordFor(x => x.Password, new { @class = "form-control", id = "passwordField" })
                        <i class="fas fa-eye eye-icon" id="togglePassword" onclick="togglePasswordVisibility()"></i> <!-- Göster/Gizle ikonu -->
                    </div>
                    @Html.ValidationMessageFor(x => x.Password, "", new { @class = "validation-message" })
                    <br />
                    @Html.Label("Doğum Tarihi")
                    @Html.EditorFor(x => x.DateOfBirth, new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(x => x.DateOfBirth)
                    <br />
                    <br />
                    <br />
                    @Html.HiddenFor(x => x.ID)

                    <button class="btn hvr-hover" onmouseover="this.style.color='white'">Değişiklikleri Kaydet</button>
                    <br />
                    <br />
                </div>
            </div>
        }
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/js/all.min.js"></script>
<script>
    // Şifreyi gösterme/gizleme fonksiyonu
    function togglePasswordVisibility() {
        const passwordField = document.getElementById('passwordField');
        const eyeIcon = document.getElementById('togglePassword');
        if (passwordField.type === "password") {
            passwordField.type = "text"; // Şifreyi göster
            eyeIcon.classList.remove('fa-eye'); // 'Göster' simgesini değiştir
            eyeIcon.classList.add('fa-eye-slash'); // 'Gizle' simgesini ekle
        } else {
            passwordField.type = "password"; // Şifreyi gizle
            eyeIcon.classList.remove('fa-eye-slash'); // 'Gizle' simgesini değiştir
            eyeIcon.classList.add('fa-eye'); // 'Göster' simgesini ekle
        }
    }
</script>